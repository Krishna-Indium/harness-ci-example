pipeline:
  identifier: Build_harness_ci_example_1717657336656
  name: Build harness-ci-example
  orgIdentifier: default
  projectIdentifier: Generative_AI
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.KrishnaIndium
        repoName: Simple-Node-App-Harness-Artifact
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: echo
                  name: install deps
                  spec:
                    shell: Sh
                    command: |-
                      touch genAI.txt
                      npm install
                      npm test
                  timeout: ""
                  type: Run
              - step:
                  type: BuildAndPushDockerRegistry
                  name: gen_ai-build
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: Gen_Docker_Hub
                    repo: docskrishna/gen_ai
                    tags:
                      - latest
              - step:
                  type: AquaTrivy
                  name: AquaTrivy_1
                  identifier: AquaTrivy_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: container
                      detection: auto
                    advanced:
                      log:
                        level: info
                    privileged: true
                    image:
                      type: docker_v2
                      name: docskrishna/gen_ai
                      domain: docker.io
                      tag: latest
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: svc
          environment:
            environmentRef: env
            deployToAll: false
            infrastructureDefinitions:
              - identifier: infra
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
